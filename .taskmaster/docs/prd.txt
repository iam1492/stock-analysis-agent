<context>
# Overview
이 프로젝트는 AI 기반 주식 분석 서비스로, Next.js 프론트엔드와 Python 백엔드를 사용하는 웹 애플리케이션입니다. 사용자는 로그인 후 주식 분석을 위한 AI 에이전트와 채팅할 수 있습니다.

# Core Features
- 이메일/비밀번호 기반 사용자 인증
- 로그인 화면 (첫 화면)
- 회원가입 기능 (개발자 전용, 프로덕션에서는 숨김)
- 로그인 후 메인 채팅 인터페이스 접근
- NextAuth.js를 사용한 세션 관리

# User Experience
- 사용자 페르소나: 주식 투자자, 금융 분석가
- 주요 사용자 플로우:
  1. 앱 접속 시 로그인 화면 표시
  2. 이메일/비밀번호로 로그인
  3. 로그인 성공 시 메인 채팅 인터페이스로 이동
- UI/UX 고려사항: 간단하고 직관적인 로그인 폼, 보안성 강조
</context>
<PRD>
# Technical Architecture
- 프론트엔드: Next.js 15, TypeScript, Tailwind CSS
- 인증: NextAuth.js v5 (Auth.js)
- 데이터베이스: 사용자 정보 저장용 (나중에 추가)
- 배포 환경 구분: 개발/프로덕션 환경에서 회원가입 노출 제어

# Development Roadmap
## Phase 1: 기본 인증 인프라 구축
- NextAuth.js 설치 및 설정
- 이메일/비밀번호 프로바이더 구성
- 기본 로그인 폼 컴포넌트 생성
- 세션 관리 및 보호된 라우트 설정

## Phase 2: 로그인/회원가입 UI 구현
- 로그인 페이지 디자인 및 구현
- 회원가입 폼 컴포넌트 (개발자 전용)
- 환경 변수에 따른 UI 조건부 렌더링
- 로그인 상태에 따른 리다이렉션 로직

## Phase 3: 통합 및 테스트
- 기존 메인 페이지와 로그인 플로우 통합
- 인증 상태에 따른 페이지 접근 제어
- 에러 처리 및 사용자 피드백
- 개발/프로덕션 환경 테스트

# Logical Dependency Chain
1. NextAuth.js 설치 및 기본 설정 (foundation)
2. 인증 프로바이더 구성 (credentials provider)
3. 로그인 폼 UI 컴포넌트 생성
4. 회원가입 폼 컴포넌트 생성 (개발자 전용)
5. 페이지 라우팅 및 보호 로직 구현
6. 환경 기반 UI 조건부 렌더링
7. 통합 테스트 및 디버깅

# Risks and Mitigations
- NextAuth.js v5의 새로운 API 학습: 공식 문서와 예제 코드 참고
- 환경 변수 관리: 개발/프로덕션 환경별 설정 파일 분리
- 보안 고려사항: 비밀번호 해싱, 세션 관리 적절히 구현

# Appendix
- NextAuth.js v5 마이그레이션 가이드 참고
- 기존 프로젝트 구조 유지하며 인증 레이어 추가
</PRD>