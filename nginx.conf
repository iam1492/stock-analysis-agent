events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    

    # Upstream servers
    upstream frontend {
        server stock-analysis-frontend:3000;
        keepalive 32;
    }

    upstream backend {
        server stock-analysis-backend:8000;
        keepalive 32;
    }

    # HTTP Server (Redirect to HTTPS)
    server {
        listen 80;
        server_name ramus-stock.life www.ramus-stock.life;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name ramus-stock.life www.ramus-stock.life;

        # SSL certificates
        # 이 파일이 이제 [서버 인증서 + CA 루트]가 합쳐진 풀체인 파일입니다.
        ssl_certificate /etc/ssl/certs/ramus-stock.life.pem; 
        ssl_certificate_key /etc/ssl/private/ramus-stock.life.key.pem;
        ssl_verify_client optional;
        ssl_client_certificate /etc/ssl/certs/origin_ca_rsa_root.pem;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static file caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Next.js frontend (catch-all, must be last)
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings for SSE
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            return 502 "Service temporarily unavailable";
            add_header Content-Type text/plain;
        }
    }
}